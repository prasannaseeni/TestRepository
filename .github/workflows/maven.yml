# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on:

 
  workflow_dispatch:
     inputs:
       dirname:
         description: To get the directory name
         required: true
         default: 2.0."$GITHUB_RUN_NUMBER"
env:
  input_version: $GITHUB_RUN_NUMBER
   

jobs:
  Build:

    runs-on: ubuntu-latest
    env: 
      build_version: ${{ secrets.BUILD_VERSION }}
          
 
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Setup Maven
      uses: stCarolas/setup-maven@v4.3
     
    - name: Build with Maven
      run: mvn -B package --file single-module/pom.xml
           
   # - name: To copy files to apache tomcat
   #   run: cp /home/ubuntu/actions-runner/Ubuntu_Apache/TestRepository/TestRepository/index.html /var/lib/tomcat9/webapps/MyApps/
      
    - name: To check the runners
      run: echo "Hello ${{ github.event.inputs.dirname }}"
      
   # - name: upload artifact for deployment job
   #   uses: actions/upload-artifact@v3
   #   with:
   #     name: warfile
   #     path: single-module/GitHubActionsTesting
   
    - name: To alter secrets
      uses: hmanzur/actions-set-secret@v2.0.0
      with:
        name: 'BUILD_VERSION'
        value: $GITHUB_RUN_NUMBER
        repository: prasannaseeni/TestRepository
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        
    - name: To create folder using secret
      run: mkdir /home/ubuntu/${{ secrets.BUILD_VERSION }}
        
        
  DeployToDev:
  
    runs-on: Runner3
    environment: DEV
    needs: Build
    env: 
      dev_version: ${{ secrets.DEV_VERSION }}
    
    steps: 
    
    #  - name: Download artifact from build job
    #    uses: actions/download-artifact@v3
    #    with:
    #      name: warfile
    #      path: buildartifact
      
    #  - name: To create directory
    #    run: mkdir "${{ github.event.inputs.dirname }}"
          
       
      - name: To get env values
        run: env
        
    #  - name: upload artifact for deployment job
    #    uses: actions/upload-artifact@v3
    #    with:
    #      name: devwarfile
    #     path: buildartifact/GitHubActionsTesting
    
      - name: To alter secrets
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'DEV_VERSION'
          value: $GITHUB_RUN_NUMBER
          repository: prasannaseeni/TestRepository
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      
      - name: To create folder using secret
        run: mkdir /home/ubuntu/dev/${{ secrets.DEV_VERSION }}
    
 
 
  DeployToSIT:
  
    runs-on: Runner3
    environment: SIT
    needs: DeployToDev
    env: 
      sit_version: ${{ secrets.SIT_VERSION }}
    
    steps: 
    
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: devwarfile
          path: devartifact
               
       
      - name: To get env values
        run: env
        
      - name: To alter secrets
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'SIT_VERSION'
          value: $GITHUB_RUN_NUMBER
          repository: prasannaseeni/TestRepository
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          
      - name: To create folder using secret
        run: mkdir /home/ubuntu/sit/${{ secrets.SIT_VERSION }}
  
  DeployToPP:
  
    runs-on: Runner3
    environment: PREPROD
    needs: DeployToSIT
    env: 
      dev_version: ${{ secrets.DEV_VERSION }}
    
    steps:
        
     - name: To alter secrets
       uses: hmanzur/actions-set-secret@v2.0.0
       with:
         name: 'PP_VERSION'
         value: $GITHUB_RUN_NUMBER
         repository: prasannaseeni/TestRepository
         token: ${{ secrets.REPO_ACCESS_TOKEN }}
          
     - name: To create folder using secret
       run: mkdir /home/ubuntu/preprod/${{ secrets.PP_VERSION }}
       
     - name: To display env variables
       run: echo "dev version is ${{ env.dev_version }}"
        
       
     
        
      
